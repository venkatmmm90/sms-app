var Template = require('Template');
var bodyParser = require('body-parser');

module.exports = function(app){
	console.log("entered Controller");
	app.use(bodyParser.json());
	app.use(bodyParser.urlencoded({ extended: true }));


	app.get('/template', function(req, res){
		console.log("entered get");
		var sortOptions = {};
		if(req.query.sortAccess) sortOptions.templateAccess = parseInt(req.query.sortAccess);
		if(req.query.sortFavourite) sortOptions.isFavourite = parseInt(req.query.sortFavourite);
		Template.find().skip(parseInt(req.query.skip)).limit(parseInt(req.query.limit)).sort(sortOptions).exec(function(err, templateValues){
			if(err) res.status(500).send(err);
			res.status(200).send(templateValues);
		});
	});


	app.post('/template',function(req, res){
		console.log("entered post");
		console.log("header: "+req.body.templateHeader+" \n text:"+req.body.templateText +"\naccess: "+req.body.templateAccess+"\n isfavourite:"+req.body.isFavourite+"\nid:"+req.body.id+"\ncreatedAt:"+req.body.createdAt+"\ncreatedBy:"+req.body.createdBy);
		var templateValue = Template({
			templateHeader:req.body.templateHeader,
	  		templateText:req.body.templateText,
			templateAccess:req.body.templateAccess,
			isFavourite:req.body.isFavourite,
			createdAt:req.body.createdAt,
			createdBy:req.body.createdBy
		});
		templateValue.save(function(err, createdTemplateValue){
			if(err) res.status(500).send(err);
			res.status(200).send(createdTemplateValue);
		});
	});


	app.patch('/template/:templateId', function(req, res) {
        console.log("entered update");
        Template.findOne({templateId:req.params.templateId}, function(err, templateValue){
			if(err) res.status(500).send(err);
			templateValue.templateHeader = req.body.templateHeader || templateValue.templateHeader;
	  		templateValue.templateText = req.body.templateText || templateValue.templateText;
			templateValue.templateAccess = req.body.templateAccess || templateValue.templateAccess;
			templateValue.isFavourite = req.body.isFavourite || templateValue.isFavourite;
			templateValue.createdAt = req.body.createdAt || templateValue.createdAt;
			templateValue.createdBy = req.body.createdBy || templateValue.createdBy;

			templateValue.save(function(err, updatedTemplateValue){
				if(err) res.status(500).send(err);
				res.status(200).send(updatedTemplateValue);
			});
		});
 	});


    app.delete('/template', function(req, res) {
        console.log("entered delete");
        Template.remove({templateId: { $in: req.body }}, function(err, result) {
            if(err) res.status(500).send(err);
            res.status(200).send(result);
        })
 	});
}